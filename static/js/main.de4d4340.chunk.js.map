{"version":3,"sources":["img/persik.png","panels/userInfo/UserInfo.js","panels/navigation/Navigation.js","panels/Home.js","panels/persik/Persik.js","panels/pictureGen/PictureGen.js","panels/quoteGen/QuoteGen.js","App.js","index.js"],"names":["module","exports","UserInfo","props","a","connect","sendPromise","state","user","fetchData","then","result","setState","this","title","before","photo_200","src","description","city","first_name","last_name","React","Component","Navigation","size","level","onClick","go","data-to","Home","id","osName","platform","Persik","left","IOS","className","persik","alt","PictureGen","url","changePicture","Math","floor","random","PictureGenView","QUOTE_URL","QuoteGen","quote","changeQuote","fetch","response","json","data","text_out","catch","error","console","log","QuoteView","App","useState","activePanel","setActivePanel","popout","setPopout","useEffect","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.de4d4340.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import connect from \"@vkontakte/vk-connect\";\r\nimport Cell from \"@vkontakte/vkui/dist/components/Cell/Cell\";\r\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport React from 'react';\r\n\r\nclass UserInfo extends React.Component {\r\n\r\n    state = {\r\n        user: null,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n\r\n        async function fetchData() {\r\n            return await connect.sendPromise('VKWebAppGetUserInfo');\r\n        }\r\n\r\n        let user = fetchData();\r\n\r\n        user.then((result) => {\r\n            this.setState({user: result})\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            this.state.user &&\r\n            <Group title=\"Обо мне\">\r\n                <Cell\r\n                    before={this.state.user.photo_200 ? <Avatar src={this.state.user.photo_200}/> : null}\r\n                    description={this.state.user.city && this.state.user.city.title ? this.state.user.city.title : ''}\r\n                >\r\n                    {`${this.state.user.first_name} ${this.state.user.last_name}`}\r\n\r\n                </Cell>\r\n            </Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserInfo\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\n\r\nconst Navigation = props => (\r\n    <Group title=\"Меню навигации\">\r\n        <Div>\r\n\r\n            <Button size=\"xl\" level=\"2\" onClick={props.go} data-to=\"myPanel\">\r\n                Генератор картинок\r\n            </Button>\r\n\r\n            <Button size=\"xl\" level=\"2\" onClick={props.go} data-to=\"quoteGen\">\r\n                Генератор цитат\r\n            </Button>\r\n\r\n            <Button size=\"xl\" level=\"2\" onClick={props.go} data-to=\"persik\">\r\n                Show Persik\r\n            </Button>\r\n\r\n        </Div>\r\n    </Group>\r\n);\r\n\r\nNavigation.propTypes = {\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport UserInfo from \"./userInfo/UserInfo\";\r\nimport Navigation from \"./navigation/Navigation\";\r\n\r\nconst Home = ({id, go}) => (\r\n    <Panel id={id}>\r\n        <PanelHeader>Стартовый экран</PanelHeader>\r\n        <UserInfo/>\r\n        <Navigation go={go}/>\r\n    </Panel>\r\n);\r\n\r\nHome.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n    fetchedUser: PropTypes.shape({\r\n        photo_200: PropTypes.string,\r\n        first_name: PropTypes.string,\r\n        last_name: PropTypes.string,\r\n        city: PropTypes.shape({\r\n            title: PropTypes.string,\r\n        }),\r\n    }),\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {platform, IOS} from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport persik from '../../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}\r\n\t\t>\r\n\t\t\tPersik\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\r\n\t</Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {platform, IOS} from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\r\nimport './PictureGen.css';\r\n\r\nconst osName = platform();\r\n\r\nclass PictureGen extends React.Component {\r\n\r\n    state = {\r\n        url: \"https://picsum.photos/500\"\r\n    }\r\n\r\n    render() {\r\n        return <PictureGenView\r\n            id={this.props.id}\r\n            go={this.props.go}\r\n            changePicture={this.changePicture}\r\n            url={this.state.url}\r\n        />\r\n    }\r\n\r\n    changePicture = () => {\r\n        this.setState({url: \"https://picsum.photos/500?aaa=\" + Math.floor(Math.random() * Math.floor(1000000))})\r\n    }\r\n\r\n}\r\n\r\nconst PictureGenView = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Генератор картинок\r\n        </PanelHeader>\r\n\r\n        <img className=\"picture\" id=\"picture\" src={props.url} alt=\"\"/>\r\n        <Button size=\"xl\" level=\"2\" onClick={props.changePicture}>\r\n            Новая картинка\r\n        </Button>\r\n    </Panel>\r\n);\r\n\r\nPictureGenView.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n    changePicture: PropTypes.func.isRequired,\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PictureGen;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {platform, IOS} from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\r\nimport HeaderButton from \"@vkontakte/vkui/dist/components/HeaderButton/HeaderButton\";\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nconst QUOTE_URL = \"https://www.randomtext.me/api/lorem/ul-5/5-15\";\r\nconst osName = platform();\r\n\r\nclass QuoteGen extends React.Component {\r\n\r\n    state = {\r\n        quote: \"\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeQuote();\r\n    }\r\n\r\n    render() {\r\n        return <QuoteView\r\n            id={this.props.id}\r\n            go={this.props.go}\r\n            quote={this.state.quote}\r\n            changeQuote={this.changeQuote}\r\n        />\r\n    }\r\n\r\n    changeQuote = () =>\r\n        fetch(QUOTE_URL)\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                this.setState({quote: data.text_out})\r\n            })\r\n            .catch(error => {\r\n                console.log('Request failed', error)\r\n            });\r\n}\r\n\r\n\r\nconst QuoteView = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Генератор цитат\r\n        </PanelHeader>\r\n        <div>\r\n            {props.quote}\r\n        </div>\r\n        <Button size=\"xl\" level=\"2\" onClick={props.changeQuote}>\r\n            Обновить цитату\r\n        </Button>\r\n\r\n    </Panel>\r\n);\r\n\r\nQuoteView.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n    changeQuote: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default QuoteGen;\r\n","import React, {useState, useEffect} from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\nimport Persik from './panels/persik/Persik';\r\nimport PictureGen from \"./panels/pictureGen/PictureGen\";\r\nimport QuoteGen from \"./panels/quoteGen/QuoteGen\";\r\n\r\nconst App = () => {\r\n    const [activePanel, setActivePanel] = useState('home');\r\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\r\n\r\n    useEffect(() => {\r\n        connect.subscribe(({detail: {type, data}}) => {\r\n            if (type === 'VKWebAppUpdateConfig') {\r\n                const schemeAttribute = document.createAttribute('scheme');\r\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n                document.body.attributes.setNamedItem(schemeAttribute);\r\n\r\n            }\r\n        });\r\n\r\n        setPopout(null)\r\n    }, []);\r\n\r\n    const go = e => {\r\n        setActivePanel(e.currentTarget.dataset.to);\r\n    };\r\n\r\n\r\n    return (\r\n        <View activePanel={activePanel} popout={popout}>\r\n            <Home id='home' go={go}/>\r\n            <Persik id='persik' go={go}/>\r\n            <PictureGen id='myPanel' go={go}/>\r\n            <QuoteGen id='quoteGen' go={go}/>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import 'core-js/features/map';\r\nimport 'core-js/features/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport App from './App';\r\n// import registerServiceWorker from './sw';\r\n\r\n// Init VK  Mini App\r\nconnect.send('VKWebAppInit');\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}